# üìã GUIA PARA IMPLEMENTA√á√ÉO FRONTEND - CONFIGURA√á√ÉO DE TAXAS DE PAGAMENTO

## üéØ OBJETIVO
Criar uma p√°gina administrativa para que o usu√°rio possa configurar as taxas de cada forma de pagamento (cr√©dito, d√©bito, PIX, dinheiro).

---

## üîß COMO O BACKEND EST√Å FUNCIONANDO

### **Endpoints Dispon√≠veis:**

#### 1. **GET** `/api/taxas-pagamento` 
- **Fun√ß√£o:** Lista todas as taxas configuradas
- **Resposta:**
```json
[
  {
    "id": 1,
    "tipoPagamento": "CREDITO_1X",
    "taxa": 2.00,
    "ativo": true
  },
  {
    "id": 2,
    "tipoPagamento": "DEBITO", 
    "taxa": 1.50,
    "ativo": true
  }
]
```

#### 2. **GET** `/api/taxas-pagamento/{tipoPagamento}`
- **Fun√ß√£o:** Busca taxa espec√≠fica por tipo
- **Exemplo:** `/api/taxas-pagamento/CREDITO_1X`
- **Resposta:**
```json
{
  "id": 1,
  "tipoPagamento": "CREDITO_1X",
  "taxa": 2.00,
  "ativo": true
}
```

#### 3. **POST** `/api/taxas-pagamento`
- **Fun√ß√£o:** Criar ou atualizar uma taxa
- **Body:**
```json
{
  "tipoPagamento": "CREDITO_1X",
  "taxa": 2.30,
  "ativo": true
}
```
- **Resposta:** Mesma estrutura do objeto criado/atualizado

#### 4. **GET** `/api/taxas-pagamento/tipos-disponiveis`
- **Fun√ß√£o:** Lista todos os tipos de pagamento dispon√≠veis
- **Resposta:**
```json
[
  {
    "codigo": "CREDITO_1X",
    "descricao": "Cr√©dito 1x"
  },
  {
    "codigo": "CREDITO_2X", 
    "descricao": "Cr√©dito 2x"
  },
  {
    "codigo": "DEBITO",
    "descricao": "D√©bito"
  },
  {
    "codigo": "PIX",
    "descricao": "PIX"
  },
  {
    "codigo": "DINHEIRO",
    "descricao": "Dinheiro"
  }
]
```

---

## üé® COMO IMPLEMENTAR NO FRONTEND

### **1. Estrutura da P√°gina:**

```
üìÑ Configura√ß√µes de Taxas de Pagamento
‚îú‚îÄ‚îÄ üìã Lista de formas de pagamento
‚îÇ   ‚îú‚îÄ‚îÄ Cr√©dito 1x: [2.00%] [Ativo: ‚úÖ] [Editar]
‚îÇ   ‚îú‚îÄ‚îÄ Cr√©dito 2x: [2.50%] [Ativo: ‚úÖ] [Editar]  
‚îÇ   ‚îú‚îÄ‚îÄ D√©bito: [1.50%] [Ativo: ‚úÖ] [Editar]
‚îÇ   ‚îú‚îÄ‚îÄ PIX: [0.00%] [Ativo: ‚úÖ] [Editar]
‚îÇ   ‚îî‚îÄ‚îÄ Dinheiro: [0.00%] [Ativo: ‚úÖ] [Editar]
‚îî‚îÄ‚îÄ üíæ Bot√£o Salvar Altera√ß√µes
```

### **2. Funcionalidades Necess√°rias:**

#### **A) Carregamento Inicial:**
1. Chame `GET /api/taxas-pagamento/tipos-disponiveis` para obter todos os tipos
2. Chame `GET /api/taxas-pagamento` para obter as taxas configuradas
3. Combine as duas listas para exibir todas as op√ß√µes

#### **B) Edi√ß√£o de Taxa:**
1. Campo input para inserir o percentual da taxa (ex: 2.50 para 2.5%)
2. Toggle/Switch para ativar/desativar a forma de pagamento
3. Valida√ß√£o: taxa deve ser >= 0

#### **C) Salvar Altera√ß√µes:**
1. Para cada taxa modificada, fa√ßa `POST /api/taxas-pagamento`
2. Exiba mensagem de sucesso/erro
3. Recarregue a lista atualizada

### **3. Exemplo de Implementa√ß√£o (React/Vue/Angular):**

#### **Estrutura de Dados:**
```javascript
const taxasConfig = [
  {
    codigo: 'CREDITO_1X',
    descricao: 'Cr√©dito 1x',
    taxa: 2.00,
    ativo: true,
    modificado: false
  },
  // ... outros tipos
];
```

#### **Fun√ß√µes Principais:**
```javascript
// Carregar taxas do backend
async function carregarTaxas() {
  const tipos = await fetch('/api/taxas-pagamento/tipos-disponiveis');
  const taxas = await fetch('/api/taxas-pagamento');
  // Combinar e exibir
}

// Atualizar taxa espec√≠fica
async function atualizarTaxa(tipoPagamento, novaTaxa, ativo) {
  const response = await fetch('/api/taxas-pagamento', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      tipoPagamento: tipoPagamento,
      taxa: novaTaxa,
      ativo: ativo
    })
  });
  
  if (response.ok) {
    console.log('Taxa atualizada com sucesso!');
  }
}

// Salvar todas as altera√ß√µes
async function salvarTodasAlteracoes() {
  for (const taxa of taxasModificadas) {
    await atualizarTaxa(taxa.codigo, taxa.taxa, taxa.ativo);
  }
}
```

---

## üéØ LAYOUT SUGERIDO

### **Op√ß√£o 1: Lista com Edi√ß√£o Inline**
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üè™ Configura√ß√£o de Taxas de Pagamento          ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ Forma de Pagamento    ‚îÇ Taxa (%)  ‚îÇ Status     ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ üí≥ Cr√©dito 1x        ‚îÇ [2.00] %  ‚îÇ [‚úÖ Ativo] ‚îÇ
‚îÇ üí≥ Cr√©dito 2x        ‚îÇ [2.50] %  ‚îÇ [‚úÖ Ativo] ‚îÇ
‚îÇ üí≥ Cr√©dito 3x        ‚îÇ [3.00] %  ‚îÇ [‚úÖ Ativo] ‚îÇ
‚îÇ üí∞ D√©bito            ‚îÇ [1.50] %  ‚îÇ [‚úÖ Ativo] ‚îÇ
‚îÇ üì± PIX               ‚îÇ [0.00] %  ‚îÇ [‚úÖ Ativo] ‚îÇ
‚îÇ üíµ Dinheiro          ‚îÇ [0.00] %  ‚îÇ [‚úÖ Ativo] ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                    [üíæ Salvar Altera√ß√µes]      ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

### **Op√ß√£o 2: Cards Individuais**
```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üí≥ Cr√©dito 1x‚îÇ ‚îÇ üí≥ Cr√©dito 2x‚îÇ ‚îÇ üí∞ D√©bito    ‚îÇ
‚îÇ              ‚îÇ ‚îÇ              ‚îÇ ‚îÇ              ‚îÇ
‚îÇ Taxa: [2.00%]‚îÇ ‚îÇ Taxa: [2.50%]‚îÇ ‚îÇ Taxa: [1.50%]‚îÇ
‚îÇ [‚úÖ Ativo]   ‚îÇ ‚îÇ [‚úÖ Ativo]   ‚îÇ ‚îÇ [‚úÖ Ativo]   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

---

## ‚ö†Ô∏è PONTOS IMPORTANTES

### **1. Valida√ß√µes:**
- Taxa deve ser um n√∫mero >= 0
- Taxa deve ter no m√°ximo 2 casas decimais
- N√£o permitir salvar sem ao menos uma forma ativa

### **2. Experi√™ncia do Usu√°rio:**
- Mostrar indicador visual de "altera√ß√µes n√£o salvas"
- Confirma√ß√£o antes de desativar uma forma de pagamento
- Loading states durante as requisi√ß√µes
- Mensagens de erro/sucesso claras

### **3. Permiss√µes:**
- Esta p√°gina deve ser acess√≠vel apenas para administradores
- Verificar permiss√µes antes de exibir

### **4. Fallback/Seguran√ßa:**
- O backend j√° tem fallback autom√°tico para valores padr√£o
- Se uma taxa n√£o estiver configurada, usa os valores originais

---

## üöÄ IMPLEMENTA√á√ÉO SUGERIDA (PASSO A PASSO)

### **Fase 1: B√°sico**
1. Criar p√°gina com lista das formas de pagamento
2. Exibir taxas atuais (somente leitura)
3. Implementar carregamento dos dados

### **Fase 2: Edi√ß√£o**
1. Adicionar campos edit√°veis
2. Implementar salvamento individual
3. Adicionar valida√ß√µes

### **Fase 3: UX Avan√ßada**
1. Salvamento em lote
2. Indicadores visuais
3. Confirma√ß√µes e mensagens

---

## üîó TESTANDO A INTEGRA√á√ÉO

Use essas URLs para testar no Postman/Insomnia:

```
GET  http://localhost:8080/api/taxas-pagamento
GET  http://localhost:8080/api/taxas-pagamento/tipos-disponiveis
POST http://localhost:8080/api/taxas-pagamento
     Body: {"tipoPagamento": "CREDITO_1X", "taxa": 2.30, "ativo": true}
```

‚ö†Ô∏è **IMPORTANTE - PERMISS√ïES:**
- Estes endpoints requerem **autentica√ß√£o** e **role ADMIN**
- Certifique-se de que o usu√°rio logado tem permiss√£o de administrador
- Inclua o token JWT no header: `Authorization: Bearer {seu-token}`

## üîß TROUBLESHOOTING

### **Erro 403 Forbidden:**
- Verifique se o usu√°rio est√° logado
- Verifique se o usu√°rio tem role ADMIN
- Verifique se o token JWT est√° sendo enviado corretamente

### **Erro 404 Not Found:**
- Verifique se a aplica√ß√£o backend est√° rodando
- Confirme que os endpoints est√£o em `/api/taxas-pagamento`

---

## üìû SUPORTE

Se tiver d√∫vidas sobre:
- **Endpoints:** Consulte este documento
- **Valida√ß√µes:** Veja o backend - TaxaPagamentoService
- **Tipos de pagamento:** Veja PagamentoTipo.java

**O backend est√° 100% funcional e testado! üéâ**
