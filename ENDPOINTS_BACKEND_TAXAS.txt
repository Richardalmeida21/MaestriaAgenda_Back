# üìã ENDPOINTS DISPON√çVEIS NO BACKEND - TAXAS DE PAGAMENTO

## üéØ BASE URL: `/api/taxas-pagamento`

### **üîê IMPORTANTE:**
- **Todos os endpoints requerem autentica√ß√£o JWT**
- **Apenas usu√°rios ADMIN podem acessar (exceto GET /{tipoPagamento})**

---

## üìä ENDPOINTS DISPON√çVEIS

### **1. GET `/api/taxas-pagamento`**
- **Fun√ß√£o:** Lista todas as configura√ß√µes de taxa do banco
- **Permiss√£o:** ADMIN
- **Response:**
```json
[
  {
    "id": 1,
    "tipoPagamento": "CREDITO_1X",
    "taxa": 2.00,
    "ativo": true,
    "createdAt": "2025-09-02T10:00:00",
    "updatedAt": "2025-09-02T10:00:00"
  },
  {
    "id": 2,
    "tipoPagamento": "DEBITO",
    "taxa": 1.50,
    "ativo": true,
    "createdAt": "2025-09-02T10:00:00",
    "updatedAt": "2025-09-02T10:00:00"
  }
]
```

### **2. GET `/api/taxas-pagamento/{tipoPagamento}`**
- **Fun√ß√£o:** Obt√©m a taxa de um tipo espec√≠fico
- **Permiss√£o:** Qualquer usu√°rio autenticado
- **Exemplo:** `/api/taxas-pagamento/CREDITO_1X`
- **Response:**
```json
{
  "tipoPagamento": "CREDITO_1X",
  "taxa": 2.00
}
```

### **3. POST `/api/taxas-pagamento/configurar`**
- **Fun√ß√£o:** Configura ou atualiza uma taxa
- **Permiss√£o:** ADMIN
- **Body:**
```json
{
  "tipoPagamento": "CREDITO_1X",
  "taxa": 2.30
}
```
- **Response:**
```json
{
  "id": 1,
  "tipoPagamento": "CREDITO_1X",
  "taxa": 2.30,
  "ativo": true,
  "createdAt": "2025-09-02T10:00:00",
  "updatedAt": "2025-09-02T10:05:00"
}
```

### **4. DELETE `/api/taxas-pagamento/{tipoPagamento}`**
- **Fun√ß√£o:** Desativa uma taxa (volta para valor padr√£o)
- **Permiss√£o:** ADMIN
- **Exemplo:** `/api/taxas-pagamento/CREDITO_1X`
- **Response:**
```json
"Taxa desativada. Voltar√° para valor padr√£o."
```

### **5. POST `/api/taxas-pagamento/inicializar`**
- **Fun√ß√£o:** Inicializa todas as taxas padr√£o no banco
- **Permiss√£o:** ADMIN
- **Response:**
```json
"Taxas padr√£o inicializadas com sucesso."
```

### **6. GET `/api/taxas-pagamento/tipos-disponiveis`**
- **Fun√ß√£o:** Lista todos os tipos de pagamento dispon√≠veis
- **Permiss√£o:** ADMIN
- **Response:**
```json
[
  {
    "codigo": "CREDITO_1X",
    "descricao": "Cr√©dito 1x"
  },
  {
    "codigo": "CREDITO_2X",
    "descricao": "Cr√©dito 2x"
  },
  {
    "codigo": "CREDITO_3X",
    "descricao": "Cr√©dito 3x"
  },
  {
    "codigo": "CREDITO_4X",
    "descricao": "Cr√©dito 4x"
  },
  {
    "codigo": "CREDITO_5X",
    "descricao": "Cr√©dito 5x"
  },
  {
    "codigo": "CREDITO_6X",
    "descricao": "Cr√©dito 6x"
  },
  {
    "codigo": "CREDITO_7X",
    "descricao": "Cr√©dito 7x"
  },
  {
    "codigo": "CREDITO_8X",
    "descricao": "Cr√©dito 8x"
  },
  {
    "codigo": "CREDITO_9X",
    "descricao": "Cr√©dito 9x"
  },
  {
    "codigo": "CREDITO_10X",
    "descricao": "Cr√©dito 10x"
  },
  {
    "codigo": "DEBITO",
    "descricao": "D√©bito"
  },
  {
    "codigo": "PIX",
    "descricao": "PIX"
  },
  {
    "codigo": "DINHEIRO",
    "descricao": "Dinheiro"
  }
]
```

---

## üé® COMO O FRONTEND DEVE IMPLEMENTAR

### **Fluxo Recomendado:**

#### **1. Carregamento Inicial da P√°gina:**
```typescript
// 1. Carregar tipos dispon√≠veis
const tipos = await api.get('/api/taxas-pagamento/tipos-disponiveis');

// 2. Carregar taxas configuradas
const taxas = await api.get('/api/taxas-pagamento');

// 3. Combinar dados para exibir
```

#### **2. Salvar/Atualizar Taxa:**
```typescript
await api.post('/api/taxas-pagamento/configurar', {
  tipoPagamento: 'CREDITO_1X',
  taxa: 2.30
});
```

#### **3. Resetar Taxa para Padr√£o:**
```typescript
await api.delete('/api/taxas-pagamento/CREDITO_1X');
```

---

## ‚ö†Ô∏è TIPOS DE PAGAMENTO V√ÅLIDOS

```
CREDITO_1X, CREDITO_2X, CREDITO_3X, CREDITO_4X, CREDITO_5X,
CREDITO_6X, CREDITO_7X, CREDITO_8X, CREDITO_9X, CREDITO_10X,
DEBITO, PIX, DINHEIRO
```

---

## üîß EXEMPLO DE IMPLEMENTA√á√ÉO FRONTEND

```typescript
// Servi√ßo de Taxas
class TaxasService {
  
  // Carregar todos os tipos
  async obterTiposDisponiveis() {
    const response = await api.get('/api/taxas-pagamento/tipos-disponiveis');
    return response.data;
  }
  
  // Carregar taxas configuradas
  async obterTaxasConfiguradas() {
    const response = await api.get('/api/taxas-pagamento');
    return response.data;
  }
  
  // Configurar nova taxa
  async configurarTaxa(tipoPagamento: string, taxa: number) {
    const response = await api.post('/api/taxas-pagamento/configurar', {
      tipoPagamento,
      taxa
    });
    return response.data;
  }
  
  // Resetar taxa
  async resetarTaxa(tipoPagamento: string) {
    const response = await api.delete(`/api/taxas-pagamento/${tipoPagamento}`);
    return response.data;
  }
}
```

---

## üö® ERROS COMUNS E SOLU√á√ïES

### **400 Bad Request - "Tipo de pagamento inv√°lido"**
- Verifique se o `tipoPagamento` est√° correto
- Use apenas os valores v√°lidos listados acima

### **403 Forbidden**
- Verifique se o usu√°rio tem role ADMIN
- Verifique se o token JWT est√° sendo enviado

### **500 Internal Server Error**
- Verifique se o banco de dados est√° funcionando
- Verifique se a tabela `taxa_pagamento` foi criada

---

## üìû RESUMO PARA O FRONTEND

**O frontend deve usar EXATAMENTE estes endpoints:**

1. **Listar tipos:** `GET /api/taxas-pagamento/tipos-disponiveis`
2. **Listar taxas:** `GET /api/taxas-pagamento`
3. **Salvar taxa:** `POST /api/taxas-pagamento/configurar`
4. **Resetar taxa:** `DELETE /api/taxas-pagamento/{tipo}`

**Todos com prefixo `/api` e autentica√ß√£o JWT! üéØ**
